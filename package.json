{
  "name": "sm-daterangepicker",
  "version": "1.0.3",
  "description": "The daterangepicker component of the bootstrap: http://www.daterangepicker.com/, in directive for use with the angular.",
  "main": "lib/index.js",
  "scripts": {
    "test": "node test/smdaterangepicker.test.js",
    "build": "browserify -g browserify-css test/public/index.js -o test/public/bundle.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/supermock/sm-daterangepicker.git"
  },
  "keywords": [
    "angular",
    "angularjs",
    "directive",
    "bootstrap",
    "datepicker",
    "daterangepicker"
  ],
  "author": {
    "name": "SuperMock"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/supermock/sm-daterangepicker/issues"
  },
  "homepage": "https://github.com/supermock/sm-daterangepicker#readme",
  "dependencies": {
    "angular": "^1.5.8",
    "jquery": "^3.1.1",
    "moment": "^2.17.0",
    "bootstrap-daterangepicker": "3.0.3"
  },
  "devDependencies": {
    "browserify-css": "^0.10.1"
  },
  "readme": "# sm-daterangepicker - AngularJS (directive)\r\n\r\nThe daterangepicker component of bootstrap: http://www.daterangepicker.com/, as directive for use with AngularJS.\r\n\r\n![sm-daterangepicker](daterangepicker.png?raw=true)\r\n\r\n## Installation\r\n\r\n```\r\nnpm install --save sm-daterangepicker\r\n```\r\n\r\n**Attention**\r\nYou have imported the bootstrap css into the project so that the date component is rendered correctly.\r\n\r\n## Use\r\nAdd in the module of your application:\r\n```\r\nrequire(\"sm-daterangepicker\"); //return module name\r\nangular.module(\"yourModuleName\", [\"sm-daterangepicker\"]);\r\nou\r\nangular.module(\"yourModuleName\", [require(\"sm-daterangepicker\")]);\r\n```\r\nAfter adding, just use the policy as follows:\r\n```\r\n<input type=\"text\" ng-model=\"yourVariable\" sm-daterangepicker>\r\n```\r\n## ngModel\r\nTo get the beginning and end date, just get the date of the object in the model, formatted like this:\r\n```\r\n//ngModel\r\n{\r\n    startDate: [object Moment],\r\n    endDate: [object Moment]\r\n}\r\n\r\n//Controller\r\n$scope.yourVariable.startDate\r\n$scope.yourVariable.endDate\r\n```\r\n\r\n## Available Attributes\r\nAttribute   | Type         | Description\r\n---------- | ------------ | --------\r\nenv        | String       | Pass this attribute with \"DEV\", and soon the component will log everything that is changed. (It receives by default \"PROD\", however it picks up from node.js if it is \"DEV\")\r\nlocale     | Object       | Definition of the translation, if you do not have in the project the angular provider translate. (If no translation is passed it assigns by default the English language.)\r\ndate-time  | String       | Accepts values 24h or 12h, to indicate the format, when declared displays in the input the time.\r\nyear       | Date/Moment  | It receives only a date, and it makes a limit of the beginning of the year until the end of the year, that contains in her. (When passed this parameter it ignores the minimum and maximum date)\r\nstart-date | Date/Moment  | Sets the selected start date.\r\nend-date   | Date/Moment  | Set as the preset end date.\r\nmin-date   | Date/Moment  | Sets the minimum date.\r\nmax-date   | Date/Moment  | Sets the maximum deadline.\r\ndate-limit | String       | Limits a range by days, months, years, or hours, minutes, and seconds.\r\nonshow     | Function     | Triggered when the calendar is shown.\r\nonhide     | Function     | Triggered when the calendar is closed.\r\nonapply    | Function     | Triggered when the apply button is clicked, or when a predefined interval is clicked.\r\noncancel   | Function     | Triggered when the cancel button is clicked.\r\nsuffix-translation | String | Namespace used in the translation provider's rendering file translate.\r\n\r\n## Run-time update\r\n\r\nVariables of minimum, maximum, beginning, end, and year can all be changed at runtime, and the date component has already adapted to change.\r\n\r\n## Locale\r\n\r\n> **Note:** There are two ways to translate the daterangepicker, one is passing the locale attribute, with the following object:\r\n\r\n##### Attribute locale\r\n---\r\n```\r\n//Model\r\n$scope.localeObject = {\r\n    format: \"MM/DD/YYYY H:mm\",\r\n    separator: \" -- \",\r\n    applyLabel: \"Apply\",\r\n    cancelLabel: \"Cancel\",\r\n    fromLabel: \"From\",\r\n    toLabel: \"To\",\r\n    customRangeLabel: \"Custom\",\r\n    daysOfWeek: [   \r\n                    \"Su\",\r\n                    \"Mo\",\r\n                    \"Tu\",\r\n                    \"We\",\r\n                    \"Th\",\r\n                    \"Fr\",\r\n                    \"Sa\"\r\n                ],\r\n    monthNames: [   \r\n                    \"January\",\r\n                    \"February\",\r\n                    \"March\",\r\n                    \"April\",\r\n                    \"May\",\r\n                    \"June\",\r\n                    \"July\",\r\n                    \"August\",\r\n                    \"September\",\r\n                    \"October\",\r\n                    \"November\",\r\n                    \"December\"\r\n                ],\r\n    firstDay: \"1\"\r\n}\r\n//View\r\n<input type=\"text\" locale=\"localeObject\" sm-daterangepicker>\r\n```\r\nAnother way to do translation that is more efficient by supporting multiple languages and changing at runtime is by working with the provider [angular translate](https://angular-translate.github.io/).\r\n\r\n##### Angular translate\r\n\r\nTo better understand what I am explaining below, read about the angular translate.\r\n\r\n---\r\n> **Namespace (Optional):**\r\n> ``` <input type=\"text\" suffix-translation=\"NAMESPACE\" sm-daterangepicker> ```\r\n\r\n**file_of_translation.js**\r\n```\r\n\"SM_DATERANGEPICKER: {}\" ou \"NAMESPACE.SM_DATERANGEPICKER: {}\"\r\n\r\n\"SM_DATERANGEPICKER\": {\r\n    \"FORMAT\": \"MM/DD/YYYY H:mm\",\r\n    \"SEPARATOR\": \" -- \",\r\n    \"APPLYLABEL\": \"Apply\",\r\n    \"CANCELLABEL\": \"Cancel\",\r\n    \"FROMLABEL\": \"From\",\r\n    \"TOLABEL\": \"To\",\r\n    \"CUSTOMRANGELABEL\": \"Custom\",\r\n    \"DAYSOFWEEK\": {\r\n        \"SU\": \"Su\",\r\n        \"MO\": \"Mo\",\r\n        \"TU\": \"Tu\",\r\n        \"WE\": \"We\",\r\n        \"TH\": \"Th\",\r\n        \"FR\": \"Fr\",\r\n        \"SA\": \"Sa\"\r\n    },\r\n    \"MONTHNAMES\": {\r\n        \"JANUARY\": \"January\",\r\n        \"FEBRUARY\": \"February\",\r\n        \"MARCH\": \"March\",\r\n        \"APRIL\": \"April\",\r\n        \"MAY\": \"May\",\r\n        \"JUNE\": \"June\",\r\n        \"JULY\": \"July\",\r\n        \"AUGUST\": \"August\",\r\n        \"SEPTEMBER\": \"September\",\r\n        \"OCTOBER\": \"October\",\r\n        \"NOVEMBER\": \"November\",\r\n        \"DECEMBER\": \"December\"\r\n    },\r\n    \"FIRSTDAY\": \"1\"\r\n}\r\n```\r\n## Date limit\r\nUsing the date-limit attribute is not that complicated, what it does just, is to make a limit of the date selected from the limited range, just pass it the following:\r\n```\r\n<input type=\"text\" date-limit=\"parameter:value\" sm-daterangepicker>\r\n//Supported parameters: days, months, years, hours, minutes and seconds.\r\n//For more than one parameter passed, separate them with a comma.\r\n//Example: parameter:value,parameter:value...\r\n```\r\n\r\n## Read in another language\r\n[Clique aqui e leia em portuguÃªs](https://github.com/supermock/sm-daterangepicker/blob/master/README-pt_BR.md)\r\n\r\n## Contribution\r\nContribute to the fact that daterangepicker directive is getting better and better.\r\nJust download the project and apply your changes, and after that it will be analyzed to be approved.\r\n\r\n## Licence\r\nMIT",
  "readmeFilename": "README.md",
  "gitHead": "f675b4a274443dabcbea157b1171d32cf8768001",
  "_id": "sm-daterangepicker@1.0.3",
  "_shasum": "8caa842cc97388796a7afe9be8c7f4f0709317e6",
  "_from": "git+ssh://git@github.com/pcunha03/sm-daterangepicker.git",
  "_resolved": "git+ssh://git@github.com/pcunha03/sm-daterangepicker.git#f675b4a274443dabcbea157b1171d32cf8768001"
}
